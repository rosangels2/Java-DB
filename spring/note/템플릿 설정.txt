선생님 블로그
https://stajun.tistory.com/entry/%EC%8A%A4%ED%94%84%EB%A7%81-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC3-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0


타일즈 - jsp include를 편하게 사용

1. 타일즈 의존성 추가 
예시) pom.xml에서 스프링 버전 변경 
<org.springframework-version>5.1.8.RELEASE</org.springframework-version>

예시)5.18버전이 안될 경우 4.3.16버전으로 다운 그레이드
<org.springframework-version>4.3.16.RELEASE</org.springframework-version>

1.1 스프링 버전이 포함된 properties의 가장 밑쪽에 tiles 버전을 추가
예시) <org.apache.tiles-version>3.0.8</org.apache.tiles-version>

최종 예시) pom.xml
	<properties>
		<java-version>1.6</java-version>
		<org.springframework-version>4.3.16.RELEASE</org.springframework-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
		<org.apache.tiles-version>3.0.8</org.apache.tiles-version> 
	</properties>

1.2 pom.xml의 dependencies 안에 의존성을 추가
예시) pom.xml
<!-- Tiles -->
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-servlet</artifactId>
    <version>${org.apache.tiles-version}</version>
</dependency>
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-api</artifactId>
    <version>${org.apache.tiles-version}</version>
</dependency>
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-jsp</artifactId>
    <version>${org.apache.tiles-version}</version>
</dependency>
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-core</artifactId>
    <version>${org.apache.tiles-version}</version>
</dependency> 
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-template</artifactId>
    <version>${org.apache.tiles-version}</version>
</dependency> 

1.3 에러 발생 시 다음 dependency를 추가
예시)
<dependency>
    <groupId>commons-beanutils</groupId>
    <artifactId>commons-beanutils</artifactId>
    <version>1.8.3</version>
</dependency>

2. servlet-context.xml에 등록
예시)
<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1" /><!-- 순서를 우선으로 지정 -->
    </beans:bean>
     
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/spring/tiles-def.xml</beans:value>
            </beans:list>
        </beans:property>
</beans:bean>

3. WEB-INF > spring 폴더에 tiles-def.xml 파일 생성 후 다음 코드 붙여넣기
예시)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tiles-definitions PUBLIC
       "-//Apache Software Foundation//DTD Tiles Configuration 3.0//EN"
       "http://tiles.apache.org/dtds/tiles-config_3_0.dtd">
 
<tiles-definitions>
    <!-- (1) 레이아웃을 적용하지않는화면-->    
    <definition name=".login" template="/WEB-INF/views/layout/loginLayout.jsp">
        <put-attribute name="title" value="" />
        <put-attribute name="header" value="/WEB-INF/views/common/header.jsp" />
        <put-attribute name="menu" value="" />        
        <put-attribute name="footer" value="" />
    </definition>
 
    <!-- (2) 레이아웃을 적용하는화면-->
    <definition name=".root" template="/WEB-INF/views/layout/baseLayout.jsp">
        <put-attribute name="title" value="" />
        <put-attribute name="header" value="/WEB-INF/views/common2/header.jsp" />
        <put-attribute name="menu" value="/WEB-INF/views/common2/menu.jsp" />        
        <put-attribute name="footer" value="/WEB-INF/views/common2/footer.jsp" />
    </definition>
    
    <!-- (1) -->    
    <definition name="/login/*" extends=".login">	<!-- 로그인폴더의 하위 경로인 *을 {1}자리에 넣어서 파일을 찾는다 -->
      <put-attribute name="body" value="/WEB-INF/views/login/{1}.jsp" />
    </definition>
 
    <!-- (2) -->
   <definition name="/test/*" extends=".root">      <!-- extends : 기본은 위의 name을 호출하고 다음 경로를 해당 코드에서 설정한다 -->
      <put-attribute name="body" value="/WEB-INF/views/{1}.jsp" />
    </definition>
</tiles-definitions>

4. definition의 경로인 template="/WEB-INF/views/layout/baseLayout.jsp"에 폴더와 jsp파일을 생성 후 코드 붙여넣기
예시)
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="tiles" uri="http://tiles.apache.org/tags-tiles"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
 
<html>
<head>
<title>Explosion</title>
​
</head>
<body class="wrapper">
    <nav class="navbar navbar-default navbar-static-top" role="navigation" style="margin-bottom: 0">        
        <tiles:insertAttribute name="header"/>        
        <tiles:insertAttribute name="menu" />    
    </nav>
     <div id="page-wrapper">
             <div class="row">
                <div class="col-lg-12">    
                    <h1 class="page-header">${setHeader}</h1>
                </div>
            </div>
            <div class="row">                 
                <tiles:insertAttribute name="body" />                                                  
            </div>
          
     </div>
    <div class="main_footer">
        <div class="main_footer-inner">
            <tiles:insertAttribute name="footer" />
        </div>
    </div>
</body>
</html>

5. 설정한 경로에 맞게 폴더와 파일들을 생성 후 코드 추가
경로)
        <put-attribute name="header" value="/WEB-INF/views/common2/header.jsp" />
        <put-attribute name="menu" value="/WEB-INF/views/common2/menu.jsp" />        
        <put-attribute name="footer" value="/WEB-INF/views/common2/footer.jsp" />

예시) footer.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="tiles" uri="http://tiles.apache.org/tags-tiles"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<div style="color:blue;">푸터</div>

6. 컨트롤러에 메서드를 추가
예시)HomeController
    @RequestMapping(value= {"/main/home","/home.do"})
    public ModelAndView openTilesView(ModelAndView mv) throws Exception{
        mv.setViewName("/main/home");
        mv.addObject("setHeader", "타일즈");
        return mv;
    }





+ 게시판 적용 예시
1. BoardController로 메서드를 이동 후 board/list 매핑 메서드의 코드를 복사 후 붙여넣기
예시)
	@RequestMapping(value= {"/test/home","/test/home.do"})
    public ModelAndView openTilesView(ModelAndView mv,Criteria cri) throws Exception{
        mv.setViewName("/test/home");
        cri.setPerPageNum(2);
		ArrayList<BoardVO> boardList = boardService.getBoardList(cri);
		int totalCount = boardService.getTotalCount(cri);
		
		PageMaker pm = pageMakerService.getPageMaker(5, cri, totalCount);
		
        mv.addObject("pageMaker", pm);
        mv.addObject("list", boardList);
        return mv;
    }

2. views/common2/header.jsp의 코드를 수정
예시)
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="tiles" uri="http://tiles.apache.org/tags-tiles"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
 
    
<nav class="navbar navbar-expand-sm bg-dark navbar-dark fixed-top">
  <a class="navbar-brand" href="#">Logo</a>
  <ul class="navbar-nav">
    <li class="nav-item">
      <a class="nav-link" href="https://github.com/st8324" target="_blank">github</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="<%=request.getContextPath()%>/board/list">게시판</a>
    </li>
    <c:if test="${user.authority eq 'ADMIN' }">
	    <li class="nav-item">
	      <a class="nav-link" href="<%=request.getContextPath()%>/admin/user/list">회원관리</a>
	    </li>
	    <li class="nav-item">
	      <a class="nav-link" href="<%=request.getContextPath()%>/admin/board/list">게시판 관리</a>
	    </li>
    </c:if>
    <li class="nav-item"style="right:20px; position:absolute;">
      <a class="nav-link" href="<%=request.getContextPath()%>/signout">로그 아웃</a>
    </li>
  </ul>
</nav>

3. views/layout/baseLayout.jsp의 코드를 수정
예시)
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="tiles" uri="http://tiles.apache.org/tags-tiles"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
 
<html>
<head>
<title>Explosion</title>
​<jsp:include page="/WEB-INF/views/common/header.jsp"></jsp:include>
</head>
<body>
            
    <tiles:insertAttribute name="header"/>        
	    
		<div class="container" style="margin-top:80px">
			<tiles:insertAttribute name="body" />                                                  
		</div>
    
		<tiles:insertAttribute name="footer" />
    
</body>
</html>

4. views/test/home.jsp 파일의 코드를 수정
예시)
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<html>
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	<jsp:include page="/WEB-INF/views/common/header.jsp"></jsp:include>
	<link rel="stylesheet" href="<%=request.getContextPath()%>/resources/css/main.css">
	
	<script type="text/javascript">
		$(document).ready(function(){
			$('input[name=id]').focus();
		})
	</script>
	<title>로그인</title>
	<style>
	*{
		margin: 0;
		padding : 0;
	}
	.main{
		margin-top:50px;
	}
	.row{
		margin: 5px 0px;
	}
	.fab.fa-amazon{
		font-size: 100px;
		color: red;
	}
	</style>
</head>
<body>
	<h1>게시판</h1>
		<table class="table">
			<tr>
				<th width="5%">번호</th>
				<th width="55%">제목</th>
				<th width="10%">작성자</th>
				<th width="20%">등록일</th>
				<th width="10%">조회수</th>
			</tr>
			<c:forEach var="board" items="${list}">
				<tr>
					<th>${board.num}</th>
					<th><a href="<%=request.getContextPath()%>/board/display?num=${board.num}">${board.title}</a></th>
					<th>${board.writer}</th>
					<th>${board.registered}</th>
					<th>${board.views}</th>
				</tr>
			</c:forEach>
		</table>
		<ul class="pagination" style="justify-content: center;">
	    <c:if test="${pageMaker.prev}">
        <li class="page-item">
           <a class="page-link" href="<%=request.getContextPath()%>/board/list?page=${pageMaker.startPage-1}&type=${pageMaker.criteria.type}&search=${pageMaker.criteria.search}">Previous</a>
        </li>
	    </c:if>
	    <c:forEach begin="${pageMaker.startPage }" end="${pageMaker.endPage}" var="index">
    		<c:if test="${pageMaker.criteria.page == index }">
	        <li class="page-item active">
            <a class="page-link" href="<%=request.getContextPath()%>/board/list?page=${index}&type=${pageMaker.criteria.type}&search=${pageMaker.criteria.search}">${index}</a>
	        </li>
        </c:if>
        <c:if test="${pageMaker.criteria.page != index }">
	        <li class="page-item ">
            <a class="page-link" href="<%=request.getContextPath()%>/board/list?page=${index}&type=${pageMaker.criteria.type}&search=${pageMaker.criteria.search}">${index}</a>
	        </li>
        </c:if>
	    </c:forEach>
	    <c:if test="${pageMaker.next}">
        <li class="page-item">
           <a class="page-link" href="<%=request.getContextPath()%>/board/list?page=${pageMaker.endPage+1}&type=${pageMaker.criteria.type}&search=${pageMaker.criteria.search}">Next</a>
        </li>
	    </c:if>
		</ul>
		<form class="float-right input-group w-50" method="get" action="<%=request.getContextPath()%>/board/list">
			<select name="type" class="float-left form-control">
				<option value="0">선택</option>
				<option value="1" <c:if test="${pageMaker.criteria.type eq 1}">selected</c:if>>제목</option>
				<option value="2" <c:if test="${pageMaker.criteria.type eq 2}">selected</c:if>>내용</option>
				<option value="3" <c:if test="${pageMaker.criteria.type eq 3}">selected</c:if>>작성자</option>
			</select>
 			<input type="text" name="search" class="float-left form-control" value="${pageMaker.criteria.search}">

			<button type="submit" class="btn btn-outline-success float-left">검색</button>
		</form>
		<a href="<%=request.getContextPath()%>/board/register">
			<button type="button" class="btn btn-outline-success">등록</button>
		</a>
</body>
</html>

5. tiles-def.xml에서 경로를 수정
예시) URI = spring/board/test/home
    <!-- (2) -->
   <definition name="/test/*" extends=".root">      <!-- extends : 기본은 위의 name을 호출하고 다음 경로를 해당 위치에서 설정한다 -->
      <put-attribute name="body" value="/WEB-INF/views/test/{1}.jsp" />
    </definition>